name: Build, Test and Publish

on:
  push:
    branches:
      - master
      - main
      - ci
      - release
jobs:
  tests:
    name: Python ${{ matrix.python-version }}
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        python-version:
          - "3.9"
        postgres-version: [10.15, 11.10, 12.5, 13.1, 14.0]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set Python version
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: "requirements.txt"

      - name: Install Project dependencies
        run: |
          pip install -r requirements.txt
          python setup.py develop

      - name: Start Docker Compose
        run: |
          docker-compose -f unittest.yml up -d

      - name: Run tests
        run: |
          sudo apt install -y libmemcached-dev
          cd dtu_test_project
          python3 -m venv venv
          source ./venv/bin/activate
          pip install -r requirements.txt
          cd ..
          python setup.py develop
          cd dtu_test_project
          make test

      - name: Remove venv
        run: |
          rm -r dtu_test_project/venv

      - name: Install Python dependencies
        run: pip install wheel twine mkdocs-material

      - name: Build Python package
        run: python -m build

      - name: Upload to test pypi.
        run: twine upload --repository-url https://test.pypi.org/legacy/ -u ${{ secrets.TEST_PYPI_USER }} -p ${{ secrets.TEST_PYPI_PASSWORD }} --skip-existing dist/*.whl

      - name: Upload to pypi.
        run: twine upload -u ${{ secrets.PYPI_USER }} -p ${{ secrets.PYPI_PASSWORD }} --skip-existing dist/*.whl

      - name: Upload docs.
        run: mkdocs gh-deploy --force
